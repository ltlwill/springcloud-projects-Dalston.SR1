<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<groupId>ds.ltl.springcloud</groupId>
	<artifactId>ms-config-server</artifactId>
	<version>1.0</version>
	<name>ms-config-server</name>
	<url>http://maven.apache.org</url>
  
	<parent>
	    <groupId>ds.ltl.springcloud</groupId>
	    <artifactId>ms-parent</artifactId>
	    <version>1.0</version>
	</parent>
	<dependencies>
	    <!-- spring cloud 配置中心 -->
	  	<dependency>
	  		<groupId>org.springframework.cloud</groupId>
	  		<artifactId>spring-cloud-config-server</artifactId>
	  	</dependency>
	  	<!-- eureka服务 ，实现联合eureka服务注册中心使用，如果每个客户端都是直接调用配置中心的server端来获取配置文件信息。这样就存在了一个问题，客户端和服务端的耦合性太高，如果配置中心server端要做集群，
	  		客户端只能通过原始的方式来路由，配置中心server端改变IP地址的时候，客户端也需要修改配置，不符合springcloud服务治理的理念。springcloud提供了这样的解决方案，我们只需要将配置中心server端当做一个服务注册到eureka服务注册中心中，
	  		client端去eureka中去获取配置中心server端的服务既可-->
		<dependency>
        	<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-eureka</artifactId>
    	</dependency>
    	<!-- 配置服务中心支持SVN方式，需要这个依赖（注：其他方式，git、本地目录不需要） -->
    	<dependency>
    	  	<groupId>org.tmatesoft.svnkit</groupId>
    	  	<artifactId>svnkit</artifactId>
    	</dependency>
	</dependencies>
</project>
