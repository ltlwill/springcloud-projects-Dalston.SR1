# zuul网关（注册到服务中心）
spring:
  application:
    name: gateway-service-zuul
    
  # zipkin 配置
  zipkin: 
    base-url: http://localhost:8720  # 指定了Zipkin服务器的地址
    
  # sleuth 配置    
  sleuth:
    sampler:
      percentage: 1.0 # 采样比例为: 0.1(即10%),设置的值介于0.0到1.0之间，1.0则表示全部采集。  
    
# 关闭安全认证，springboot 1.5.X 以上默认开通了安全认证，使用CURL,POSTMAN等工具更新远程配置信息是会出现权限问题    
management:
  security:
    enabled: false    

# 服务器配置
server:
  port: 8730
  
# eureka服务配置
eureka:
  instance:
    hostname: gateway-service-zuul
  client:  
    serviceUrl:
      # 注册到高可用的服务中心（集群）
      # 无认证
      # defaultZone: http://peer1:8761/eureka/,http://peer2:8762/eureka/,http://peer3:8763/eureka/
      # 需认证版（规则：http://user:password@host:port/eureka/）
      defaultZone: http://eureka_admin:eureka_admin_123@peer1:8761/eureka/,http://eureka_admin:eureka_admin_123@peer2:8762/eureka/,http://eureka_admin:eureka_admin_123@peer3:8763/eureka/
    
# spring security配置
security:
  user:
    # 直接登录时的密码
    password: user
  ignored: /
  # session策略
  sessions: never
  # oauth2 配置 (参考github注册应用https://github.com/settings/developers。配置文件中的地址可参考该文档来配置：https://developer.github.com/v3/oauth/)
  oauth2:
    sso:
      loginPath: /login  # 登录路径
    client:
      clientId: 0a80c6eec46cb39911cd                                 # 如github上注册应用时的clientId(ltlwill的github)
      clientSecret: efa7e17db20722443f85bf35c1d622dd2b61aa9a         # 如githuhb上注册应用时的clientSecret(ltlwill的github)
      accessTokenUri: https://github.com/login/oauth/access_token    # 如github的access_token 
      userAuthorizationUri: https://github.com/login/oauth/authorize # 如github的授权地址 
    resource:
      userInfoUri: https://api.github.com/user                         #github上的user信息地址
      preferTokenInfo: false

# zuul配置：服务化（即注册到eureka服务中心）
# 下面整个树都非必须，如果不配置，将默认使用 http://GATEWAY:GATEWAY_PORT/想要访问的Eureka服务id的小写/** 路由到：http://想要访问的Eureka服务id的小写:该服务端口/**    
zuul:
  # 需要忽视的服务(配置后将不会被zuul路由)
  # ignoredServices: eureka-consumer
  # 自定义路由
  routes:
    # 可以随便写，在zuul上面唯一即可；当这里的值 = service-id时，service-id可以不写。
    api-baidu:
      path: /baidu/**
      url: http://www.baidu.com
    api-a: 
      # 自定义配置映射，想要映射到的路径（可不配置，非必须）
      # 1：在浏览器输入：http://localhost:8730/web/remote-config/getProperty，即可转发到：http://localhost:8740/remote-config/getProperty中处理
      # 2：在浏览器输入：http://localhost:8730/eureka-consumer/remote-config/getProperty，也可转发到http://localhost:8740/remote-config/getProperty中处理（使用了http://GATEWAY:GATEWAY_PORT/想要访问的Eureka服务id的小写/**的方式）
      path: /web/**   
      # Eureka中的serviceId
      serviceId: eureka-consumer
  retryable: true   # 是否开启重试功能
  
# ribbon 负载均衡重试配置
ribbon: 
  MaxAutoRetries: 2  #对当前服务的重试次数
  MaxAutoRetriesNextServer: 0  #切换相同Server的次数



